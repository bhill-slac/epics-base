# RELEASE
# Defines location of external products
include $(TOP)/RELEASE_SITE

# ===============================================================
# Define the version of modules needed by
# IOC apps or other Support apps
# ===============================================================
ASYN_MODULE_VERSION          = R4.31-1.0.0
AUTOSAVE_MODULE_VERSION      = R5.8-2.1.0
CALC_MODULE_VERSION          = R2.8.0-0.5.0
IOCADMIN_MODULE_VERSION      = R3.1.15-1.0.1
MOTOR_MODULE_VERSION         = R7.1.3
PCDS_MOTION_MODULE_VERSION   = R2.3.4
SSCAN_MODULE_VERSION         = R2.6.6.0-0.6.0
STREAMDEVICE_MODULE_VERSION  = R2.7.7-1.4.1


# ============================================================
# External Support module path definitions
#
# If any of these macros expand to a path which
# contains an "include" directory, that directory will be
# included in the compiler include path.
#
# If any of these macros expand to a path which
# contains a "lib/<arch>" directory, that directory will be
# included in the compiler link path for that architecture.
#
# If your build fails, look for these paths in your build output
# ============================================================
ASYN=$(EPICS_MODULES)/asyn/$(ASYN_MODULE_VERSION)
AUTOSAVE=$(EPICS_MODULES)/autosave/$(AUTOSAVE_MODULE_VERSION)
CALC=$(EPICS_MODULES)/calc/$(CALC_MODULE_VERSION)
IOCADMIN=$(EPICS_MODULES)/iocAdmin/$(IOCADMIN_MODULE_VERSION)
MOTOR=$(EPICS_MODULES)/motor/$(MOTOR_MODULE_VERSION)
PCDS_MOTION=$(EPICS_MODULES)/pcds_motion/$(PCDS_MOTION_MODULE_VERSION)
SSCAN=$(EPICS_MODULES)/sscan/$(SSCAN_MODULE_VERSION)
STREAMDEVICE=$(EPICS_MODULES)/streamdevice/$(STREAMDEVICE_MODULE_VERSION)

# ===============================================================
# Define the location and version of EPICS base
# ===============================================================
EPICS_BASE=$(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)

# Check for valid EPICS_BASE
ifeq ($(wildcard $(EPICS_BASE)/include),)
$(error Invalid EPICS_BASE: $(EPICS_BASE)/include)
endif

# Check for valid modules
ifeq ($(wildcard $(ASYN)/lib/$(T_A)),)
$(error Invalid ASYN: $(ASYN)/lib/$(T_A))
endif
ifeq ($(wildcard $(AUTOSAVE)/lib/$(T_A)),)
$(error Invalid AUTOSAVE: $(AUTOSAVE)/lib/$(T_A))
endif
ifeq ($(wildcard $(CALC)/lib/$(T_A)),)
$(error Invalid CALC: $(CALC)/lib/$(T_A))
endif
ifeq ($(wildcard $(IOCADMIN)/lib/$(T_A)),)
$(error Invalid IOCADMIN: $(IOCADMIN)/lib/$(T_A))
endif
ifeq ($(wildcard $(MOTOR)/lib/$(T_A)),)
$(error Invalid MOTOR: $(MOTOR)/lib/$(T_A))
endif
ifeq ($(wildcard $(PCDS_MOTION)/lib/$(T_A)),)
$(error Invalid PCDS_MOTION: $(PCDS_MOTION)/lib/$(T_A))
endif
ifeq ($(wildcard $(SSCAN)/lib/$(T_A)),)
$(error Invalid SSCAN: $(SSCAN)/lib/$(T_A))
endif
ifeq ($(wildcard $(STREAMDEVICE)/lib/$(T_A)),)
$(error Invalid STREAMDEVICE: $(STREAMDEVICE)/lib/$(T_A))
endif
