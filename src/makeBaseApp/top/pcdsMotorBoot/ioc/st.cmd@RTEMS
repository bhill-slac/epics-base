## Example RTEMS startup script

## ToDo: Remove this comment after checking these macros!
##
## The following substitutions can be done via makeBaseApp.pl
## If they weren't, do them before releasing your IOC
##
## Replace _ USER _ with your userid
##
## Replace _ APPNAME _ with the name of the application
##
## Replace _ IOC _ with the network name of the IOC
##
## Replace _ IOCPVROOT _ with the PV prefix used for
## iocAdmin PV's on this IOC
## ex. AMO:R15:IOC:23
##
## Then you can delete this comment 
##

# Load your application
ld( "../../bin/_ARCH_/_APPNAME_.obj" )

# Start the gdb stub so it's ready when needed
rtems_gdb_start()

< envPaths
epicsEnvSet( "ENGINEER",  "your_name (_USER_)" )
epicsEnvSet( "LOCATION",  "_IOCPVROOT_" )
epicsEnvSet( "IOC",       "_IOC_" )
epicsEnvSet( "IOCSH_PS1", "_IOC_> " )
epicsEnvSet( "STREAM_PROTOCOL_PATH", "protocol" )
chdir( "../.." )

## Register all support components
dbLoadDatabase("dbd/_APPNAME_.dbd")
_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase) 

# Load record instances
dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
dbLoadRecords( "db/_IOC_-motors.db",		"" )

# MDrive driver Setup parameters:
#	MDrivePlusSetup( maxCtrlrs, rate )
#	maxCtrlrs	= Maximum number of controllers
#	rate		= Motor task polling rate (min=1Hz,max=60Hz)
MDrivePlusSetup( 10, 5 )

# Configure each motor
drvAsynIPPortConfigure( "M01", "serial-tst-r219.pcdsn:2106 TCP", 0, 0 0 )

# Configurure one MDrive driver instance for each motor
MDrivePlusConfig( 0, "M01" )

# Optional: Enable tracing
# asynSetTraceIOMask( "M01",	0,		2 )
# asynSetTraceMask(   "M01",	0,		9 )

# Send trace output to motor specific log files
asynSetTraceFile(   "M01",	0, "/reg/d/iocData/_IOC_/M01.log" )

# Optional: Enable MDrive debug output
# Requires that ImsSrc motor be built with DEBUG
# drvMDrivePlusdebug = 4

# Setup autosave
save_restoreSet_status_prefix( "_IOCPVROOT_:" )
save_restoreSet_IncompleteSetsOk( 1 )
save_restoreSet_DatedBackupFiles( 1 )

set_savefile_path( "/thisIocData/autosave" )
set_requestfile_path( "autosave" )

set_pass0_restoreFile( "_IOC_.sav" )
set_pass1_restoreFile( "_IOC_.sav" )

# Remove prior archive file
rm( "/thisIocData/archive/_IOC_.archive" )

# Update archive file
cp( "archive/_IOC_.archive", "/thisIocData/archive/_IOC_.archive" )

# Convenience aliases
reboot=rtemsReboot
mon=rtemsMonitor

# Initialize the IOC and start processing records
iocInit()

# Start autosave backups
create_monitor_set( "_IOC_.req", 30, "" )
create_monitor_set( "_IOC_-positions.req", 5, "" )

