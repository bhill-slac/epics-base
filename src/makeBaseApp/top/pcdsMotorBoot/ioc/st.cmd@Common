#!../../bin/_ARCH_/_APPNAME_

## ToDo: The following substitutions can be done via makeBaseApp.pl
## If they weren't, do them before releasing your IOC
##
## Replace _ USER _ with your userid
##
## Replace _ APPNAME _ with the name of the application
##
## Replace _ IOC _ with the network name of the IOC
##
## Replace _ IOCPVROOT _ with the PV prefix used for
## iocAdmin PV's on this IOC
## ex. AMO:R15:IOC:23
##

epicsEnvSet( "ENGINEER", "your_name (_USER_)" )
epicsEnvSet( "LOCATION", "_IOCPVROOT_" )
epicsEnvSet( "IOCSH_PS1", "_IOC_> " )
< envPaths
cd( "../.." )

# Run common startup commands for linux soft IOC's
< /reg/d/iocCommon/All/pre_linux.cmd

# Register all support components
dbLoadDatabase("dbd/_APPNAME_.dbd")
_APPNAME__registerRecordDeviceDriver(pdbbase)

# MDrive driver Setup parameters:
#	MDrivePlusSetup( maxCtrlrs, rate )
#	maxCtrlrs	= Maximum number of controllers
#	rate		= Motor task polling rate
MDrivePlusSetup( 20, 5 )

# Configure each motor
drvAsynIPPortConfigure( "MMS:01", "digi-tst-01.pcdsn:2101 TCP", 0, 0 0 )

# Configurure one MDrive driver instance for each motor
MDrivePlusConfig( 0, "MMS:01" )

# Optional: Enable tracing
# asynSetTraceIOMask( "MMS:01",	0,		2 )
# asynSetTraceMask(   "MMS:01",	0,		9 )

# Send trace output to motor specific log files
asynSetTraceFile(   "MMS:01",	"/reg/d/iocCommon/_IOC_/MMS:01.log" )

# Optional: Enable MDrive debug output
# Requires that ImsSrc motor be built with DEBUG
# drvMDrivePlusdebug = 4

# Load record instances
dbLoadRecords( "db/iocAdmin.db",			"IOC=_IOCPVROOT_" )
dbLoadRecords( "db/save_restoreStatus.db",	"IOC=_IOCPVROOT_" )
dbLoadRecords( "db/motors.db",				"IOC=_IOCPVROOT_,LOC=TST,SYS=EXP" )

# Setup autosave
set_savefile_path( "/reg/d/iocData/_IOC_/autosave" )
set_requestfile_path( "autosave" )
save_restoreSet_IncompleteSetsOk( 1 )
save_restoreSet_DatedBackupFiles( 1 )
set_pass0_restoreFile( "autosave_positions.sav" )
set_pass0_restoreFile( "autosave_settings.sav" )
set_pass1_restoreFile( "autosave_positions.sav" )
set_pass1_restoreFile( "autosave_settings.sav" )

# Initialize the IOC and start processing records
iocInit()

# Start autosave backups
create_monitor_set( "autosave_positions.req", 5, "IOC=_IOCPVROOT_" )
create_monitor_set( "autosave_settings.req", 30, "IOC=_IOCPVROOT_" )

# All IOCs should dump some common info after initial startup.
< /reg/d/iocCommon/All/post_linux.cmd
