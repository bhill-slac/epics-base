#!../../bin/_ARCH_/_APPNAME_

## ToDo: The following substitutions can be done via makeBaseApp.pl
## If they weren't, do them before releasing your IOC
##
## Replace _ USER _ with your userid
##
## Replace _ APPNAME _ with the name of the application
##
## Replace _ IOC _ with the network name of the IOC
##
## Replace _ IOCPVROOT _ with the PV prefix used for
## iocAdmin PV's on this IOC
## ex. AMO:R15:IOC:23
##

< envPaths
epicsEnvSet( "ENGINEER", "your_name (_USER_)" )
epicsEnvSet( "LOCATION", "_IOCPVROOT_" )
epicsEnvSet( "IOCSH_PS1", "$(IOC)> " )
# TODO: change _BHC_ to the network name of the Beckhoff controller
epicsEnvSet( "BHC", "_BHC_")
cd( "../.." )

# Run common startup commands for linux soft IOC's
< /reg/d/iocCommon/All/pre_linux.cmd

# Add coupler
# Bx9000_Coupler_Add( UINT8 * cplrname, UINT8 * ipaddr, UINT8 * init_string)
# TODO: change to a valid IP address for the Beckhoff coupler
Bx9000_Coupler_Add( "$(BHC)", "172.21.xxx.xxx", 0 )

# Add terminals to the coupler
# Bx9000_Terminal_Add( UINT8 * cplrname, UINT16 slot, UINT8 * btname, UINT8 * init_string)
# TODO: Add other terminals by slot #
Bx9000_Terminal_Add("$(BHC)", 3, "KL9010", 0)

# Register all support components
dbLoadDatabase("dbd/_APPNAME_.dbd")
_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)

# Load record instances
dbLoadRecords( "db/iocAdmin.db",			"IOC=$(LOCATION)" )
dbLoadRecords( "db/save_restoreStatus.db",	"IOC=$(LOCATION)" )
# TODO: replace HUTCH:RXX:BHC:XX with the real location
dbLoadRecords("db/Bx9000.db", "COUPLER=$(BHC),COUPLER_LOC=HUTCH:RXX:BHC:XX")
# TODO: add module loads, e.g. dbLoadRecords("db/KL2114.db", "COUPLER=$(BHC)" )

# Setup autosave
set_savefile_path( "$(IOC_DATA)/$(IOC)/autosave" )
set_requestfile_path( "$(TOP)/autosave" )
save_restoreSet_status_prefix( "$(LOCATION):" )
save_restoreSet_IncompleteSetsOk( 1 )
save_restoreSet_DatedBackupFiles( 1 )
set_pass0_restoreFile( "$(IOC).sav" )
set_pass1_restoreFile( "$(IOC).sav" )

# Initialize the IOC and start processing records
iocInit()

# Start autosave backups
create_monitor_set( "$(IOC).req", 5 )

# All IOCs should dump some common info after initial startup.
< /reg/d/iocCommon/All/post_linux.cmd
