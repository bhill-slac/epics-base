diff --git a/configure/os/CONFIG_SITE.Common.RTEMS b/configure/os/CONFIG_SITE.Common.RTEMS
index d2cccea..d010105 100644
--- a/configure/os/CONFIG_SITE.Common.RTEMS
+++ b/configure/os/CONFIG_SITE.Common.RTEMS
@@ -7,9 +7,20 @@
 
 # Where to find RTEMS
 #
-# APS:
-RTEMS_VERSION = 4.10.2
-RTEMS_BASE = /usr/local/vw/rtems/rtems-$(RTEMS_VERSION)
+# SLAC PCDS
+#
+ifndef PACKAGE_SITE_TOP
+PACKAGE_SITE_TOP=/reg/g/pcds/package
+#PACKAGE_SITE_TOP=/afs/slac/g/pcds/package
+endif
+RTEMS_VERSION=rtems-4.9.4-x86_64
+RTEMS_SITE_TOP=$(PACKAGE_SITE_TOP)/rtems/$(RTEMS_VERSION)
+RTEMS_PATCHLVL=rtems_p1
+SSRLAPPS_PATCHLVL=ssrlApps_p4
+RTEMS_BSP=$(subst RTEMS-,,$(T_A))
+RTEMS_MAKEFILE_PATH=$(RTEMS_SITE_TOP)/target/$(RTEMS_PATCHLVL)/$(RTEMS_TARGET_CPU)-rtems/$(RTEMS_BSP)/
+
+RTEMS_BASE=$(RTEMS_SITE_TOP)/host/amd64_linux26/
 
 # Cross-compile toolchain in $(RTEMS_TOOLS)/bin
 #
@@ -30,6 +41,60 @@ USE_GESYS = NO
 
 # Select the command-line-input library to use
 #
-COMMANDLINE_LIBRARY = EPICS
-#COMMANDLINE_LIBRARY = LIBTECLA
-#COMMANDLINE_LIBRARY = READLINE
+#EPICSCOMMANDLINE_LIBRARY = READLINE
+
+RTEMS_SITE_INSTALLDIR=$(RTEMS_SITE_TOP)/target/$(RTEMS_PATCHLVL)/$(SSRLAPPS_PATCHLVL)/$(RTEMS_TARGET_CPU)-rtems/$(RTEMS_BSP)/
+CROSS_INCLUDES+= -I$(RTEMS_SITE_INSTALLDIR)/include
+
+GNU_DIR=$(RTEMS_BASE)
+CCC = $(CC)
+#TS, 2/6/2002 re-allow using the gnu dir
+#because I put libraries common to multiple BSPs there
+#GNU_TARGET_LIB_DIR resolves to GNU_DIR/GNU_TARGET/lib
+CROSS_LDFLAGS = $(addprefix -L,$(GNU_TARGET_LIB_DIR))
+CROSS_LDFLAGS+= -L$(PROJECT_RELEASE)/lib
+ifdef RTEMS_SITE_INSTALLDIR
+CROSS_LDFLAGS+= -L$(RTEMS_SITE_INSTALLDIR)/lib
+endif
+OPT_CFLAGS_YES = -g -O3
+OPT_CXXFLAGS_YES = -g -O3
+
+OBJCOPY = $(RTEMS_BASE)/bin/$(OBJCOPY_FOR_TARGET)
+XSYMS = $(RTEMS_BASE)/bin/xsyms
+
+OP_SYS_CPPFLAGS =
+# rtemsall is now rtemsbsp, we use termcap, not ncurses
+#OP_SYS_LDLIBS = -lrtemsCom -lrtemsbsp -lrtemscpu -lbspExt -lcexp -lbfd -lopcodes -liberty -lregexp -ltecla_r -lm
+
+#no LDLIBS whatsoever - we now do dynamic loading
+override EXE = .obj
+
+OP_SYS_LDLIBS = 
+OP_SYS_LDFLAGS = -Wl,-S
+
+LINK.cpp = $(CCC) -nostdlib -Wl,-r -o $@ $(STATIC_LDFLAGS) $(PRODDIR_LDFLAGS) $(LDFLAGS)
+LINK.cpp += $(PROD_LDFLAGS) $(PROD_LD_OBJS) $(PROD_LD_RESS) $(PROD_LDLIBS)
+
+ 
+# ===========================================================================================
+#
+# SSRLAPPS package. 
+# ===========================================================================================
+# Top location (for specific CPU and BSP):
+##SSRLAPPS= $(RTEMS_BASE)/ssrlApps/$(RTEMS_TARGET_CPU)-rtems$(RTEMS_VERSION)/$(T_A:RTEMS-%=%) 
+
+# If anything, apps need the headers
+
+##OP_SYS_INCLUDES += -I$(SSRLAPPS)/include 
+
+# Very unlikely that they need a library from there, too
+# since things are usually contained in modules that are
+# run-time loaded prior to EPICS.
+
+#
+# If any application really needs a library 'foo' then
+# their Makefile should say:
+#
+# foo_DIR=$(SSRLAPPS_LIB)
+##SSRLAPPS_LIB=$(SSRLAPPS)/lib
+
