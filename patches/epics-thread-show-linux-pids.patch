diff --git a/src/libCom/osi/Makefile b/src/libCom/osi/Makefile
index c06a862..912c27f 100644
--- a/src/libCom/osi/Makefile
+++ b/src/libCom/osi/Makefile
@@ -111,6 +111,7 @@ Com_SRCS += osdStdio.c
 THREAD_CPPFLAGS_NO += -DDONT_USE_POSIX_THREAD_PRIORITY_SCHEDULING
 osdThread_CPPFLAGS += $(THREAD_CPPFLAGS_$(USE_POSIX_THREAD_PRIORITY_SCHEDULING))
 osdSpin_CPPFLAGS += $(THREAD_CPPFLAGS_$(USE_POSIX_THREAD_PRIORITY_SCHEDULING))
+osdThread_CPPFLAGS_Linux += -DSHOW_LINUX_PIDS
 
 Com_SRCS += osdThread.c
 Com_SRCS += osdThreadExtra.c
diff --git a/src/libCom/osi/os/posix/osdThread.c b/src/libCom/osi/os/posix/osdThread.c
index 5989d24..578ed86 100644
--- a/src/libCom/osi/os/posix/osdThread.c
+++ b/src/libCom/osi/os/posix/osdThread.c
@@ -22,6 +22,9 @@
 #include <signal.h>
 #include <sched.h>
 #include <unistd.h>
+#ifdef SHOW_LINUX_PIDS
+#include <sys/syscall.h>
+#endif
 
 #if defined(_POSIX_MEMLOCK) && _POSIX_MEMLOCK > 0
 #include <sys/mman.h>
@@ -367,6 +370,9 @@ static void once(void)
 #endif /* _POSIX_THREAD_PRIORITY_SCHEDULING */
 
     pthreadInfo = init_threadInfo("_main_",0,epicsThreadGetStackSize(epicsThreadStackSmall),0,0);
+#ifdef SHOW_LINUX_PIDS
+    pthreadInfo->lwpId=syscall(SYS_gettid);
+#endif
     assert(pthreadInfo!=NULL);
     status = pthread_setspecific(getpthreadInfo,(void *)pthreadInfo);
     checkStatusOnceQuit(status,"pthread_setspecific","epicsThreadInit");
@@ -398,6 +404,9 @@ static void * start_routine(void *arg)
     pthreadInfo->isOnThreadList = 1;
     status = pthread_mutex_unlock(&listLock);
     checkStatusQuit(status,"pthread_mutex_unlock","start_routine");
+#ifdef SHOW_LINUX_PIDS
+    pthreadInfo->lwpId = syscall(SYS_gettid);
+#endif
     osdThreadHooksRun(pthreadInfo);
 
     (*pthreadInfo->createFunc)(pthreadInfo->createArg);
diff --git a/src/libCom/osi/os/posix/osdThread.h b/src/libCom/osi/os/posix/osdThread.h
index 3a80b53..ba1250a 100644
--- a/src/libCom/osi/os/posix/osdThread.h
+++ b/src/libCom/osi/os/posix/osdThread.h
@@ -34,6 +34,9 @@ typedef struct epicsThreadOSD {
     int                isRealTimeScheduled;
     int                isOnThreadList;
     unsigned int       osiPriority;
+#ifdef SHOW_LINUX_PIDS
+    pid_t              lwpId;
+#endif
     char               name[1];     /* actually larger */
 } epicsThreadOSD;
 
diff --git a/src/libCom/osi/os/posix/osdThreadExtra.c b/src/libCom/osi/os/posix/osdThreadExtra.c
index af622dc..9fee045 100644
--- a/src/libCom/osi/os/posix/osdThreadExtra.c
+++ b/src/libCom/osi/os/posix/osdThreadExtra.c
@@ -35,11 +35,21 @@ void epicsThreadShowInfo(epicsThreadOSD *pthreadInfo, unsigned int level)
             status = pthread_getschedparam(pthreadInfo->tid,&policy,&param);
             if(!status) priority = param.sched_priority;
         }
+#ifndef SHOW_LINUX_PIDS
         fprintf(epicsGetStdout(),"%16.16s %14p %12lu    %3d%8d %8.8s\n",
              pthreadInfo->name,(void *)
              pthreadInfo,(unsigned long)pthreadInfo->tid,
              pthreadInfo->osiPriority,priority,
              pthreadInfo->isSuspended?"SUSPEND":"OK");
+#else
+        fprintf(epicsGetStdout(),"%16.16s %14p %12lu %12lu %3d%8d %8.8s\n",
+             pthreadInfo->name,
+             (void *) pthreadInfo,
+             (unsigned long)pthreadInfo->lwpId,
+             (unsigned long)pthreadInfo->tid,
+             pthreadInfo->osiPriority,priority,
+             pthreadInfo->isSuspended?"SUSPEND":"OK");
+#endif
     }
 }
 
