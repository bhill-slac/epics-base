diff --git a/src/db/dbAccess.c b/src/db/dbAccess.c
index 6760db2..d5f798a 100644
--- a/src/db/dbAccess.c
+++ b/src/db/dbAccess.c
@@ -896,10 +896,12 @@ long epicsShareAPI dbGetLinkValue(struct link *plink, short dbrType,
         if (status) {
         	struct dbCommon *psource = plink->value.pv_link.precord;
 			if ( !dbCaIsLinkConnected( plink ) ) {
-				recGblRecordError(status, psource, "dbCaGetLink error, link not connected!");
+				if ( psource->sevr < INVALID_ALARM )
+					recGblRecordError(status, psource, "dbCaGetLink error, link not connected!");
 				recGblSetSevr(psource, LINK_ALARM, INVALID_ALARM);
 			} if ( !dbCaHasReadAccess( plink ) ) {
-				recGblRecordError(status, psource, "dbCaGetLink error, no read access!");
+				if ( psource->sevr < INVALID_ALARM )
+					recGblRecordError(status, psource, "dbCaGetLink error, no read access!");
 				recGblSetSevr(psource, READ_ACCESS_ALARM, INVALID_ALARM);
 			}
         } else {
@@ -936,7 +938,8 @@ long epicsShareAPI dbPutLinkValue(struct link *plink, short dbrType,
             } else { /* otherwise ask for the record to be processed*/
                 status = dbScanLink(psource, pdest);
 				if (status) {
-					recGblRecordError(status, psource, "Error processing record via PROC field!");
+					if ( psource->sevr < INVALID_ALARM )
+						recGblRecordError(status, psource, "Error processing record via PROC field!");
 					recGblSetSevr(psource, LINK_ALARM, INVALID_ALARM);
 				}
             }
@@ -947,10 +950,12 @@ long epicsShareAPI dbPutLinkValue(struct link *plink, short dbrType,
         status = dbCaPutLink(plink, dbrType, pbuffer, nRequest);
         if (status < 0) {
 			if ( !dbCaIsLinkConnected( plink ) ) {
-				recGblRecordError(status, psource, "dbCaPutLink error, link not connected!");
+				if ( psource->sevr < INVALID_ALARM )
+					recGblRecordError(status, psource, "dbCaPutLink error, link not connected!");
 				recGblSetSevr(psource, LINK_ALARM, INVALID_ALARM);
 			} if ( !dbCaHasReadAccess( plink ) ) {
-				recGblRecordError(status, psource, "dbCaPutLink error, no read access!");
+				if ( psource->sevr < INVALID_ALARM )
+					recGblRecordError(status, psource, "dbCaPutLink error, no read access!");
 				recGblSetSevr(psource, READ_ACCESS_ALARM, INVALID_ALARM);
 			} if ( !dbCaHasWriteAccess( plink ) ) {
 				recGblRecordError(status, psource, "dbCaPutLink error, no write access!");
