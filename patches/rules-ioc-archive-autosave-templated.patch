diff --git a/configure/CONFIG_COMMON b/configure/CONFIG_COMMON
index e6e6033..d8f8156 100644
--- a/configure/CONFIG_COMMON
+++ b/configure/CONFIG_COMMON
@@ -59,6 +59,10 @@ GNU_DIR = /usr
 
 INSTALL_LOCATION            = $(TOP)
 
+# SLAC Specific Install locations
+INSTALL_ARCHIVE             = $(INSTALL_LOCATION)/archive
+INSTALL_AUTOSAVE            = $(INSTALL_LOCATION)/autosave
+
 INSTALL_LOCATION_LIB        = $(INSTALL_LOCATION)/lib
 INSTALL_LOCATION_BIN        = $(INSTALL_LOCATION)/bin
 
diff --git a/configure/RULES.Db b/configure/RULES.Db
index b45e370..de7d1c0 100644
--- a/configure/RULES.Db
+++ b/configure/RULES.Db
@@ -13,16 +13,16 @@ SUBST_SUFFIX ?= .substitutions
 
 #####################################################  vpath
 
-vpath %.pm $(USR_VPATH) $(SRC_DIRS) $(dir $(DBD))
-vpath %.pod $(USR_VPATH) $(SRC_DIRS) $(dir $(DBD))
-vpath %.dbd $(USR_VPATH) $(SRC_DIRS) $(dir $(DBD))
-vpath %.db $(USR_VPATH) $(SRC_DIRS) $(dir $(DB))
-vpath %.vdb $(USR_VPATH) $(SRC_DIRS) $(dir $(DB))
+vpath %.pm             $(USR_VPATH) $(SRC_DIRS) $(dir $(DBD))
+vpath %.pod            $(USR_VPATH) $(SRC_DIRS) $(dir $(DBD))
+vpath %.dbd            $(USR_VPATH) $(SRC_DIRS) $(dir $(DBD))
+vpath %.db             $(USR_VPATH) $(SRC_DIRS) $(COMMON_DIR) $(INSTALL_DB) $(RELEASE_DIRS_DB)
+vpath %.vdb            $(USR_VPATH) $(SRC_DIRS) $(COMMON_DIR) $(INSTALL_DB) $(RELEASE_DIRS_DBD)
 vpath %$(SUBST_SUFFIX) $(USR_VPATH) $(SRC_DIRS) $(COMMON_DIR)
-vpath %.template $(USR_VPATH) $(SRC_DIRS) $(COMMON_DIR)
-vpath bpt%.data $(USR_VPATH) $(SRC_DIRS) $(COMMON_DIR)
-vpath %.acf $(USR_VPATH) $(SRC_DIRS) $(COMMON_DIR)
-vpath %.acs $(USR_VPATH) $(SRC_DIRS) $(COMMON_DIR)
+vpath %.template       $(USR_VPATH) $(SRC_DIRS) $(COMMON_DIR) $(INSTALL_DB) $(RELEASE_DIRS_DB)
+vpath bpt%.data        $(USR_VPATH) $(SRC_DIRS) $(COMMON_DIR)
+vpath %.acf            $(USR_VPATH) $(SRC_DIRS) $(COMMON_DIR)
+vpath %.acs            $(USR_VPATH) $(SRC_DIRS) $(COMMON_DIR)
 
 ##################################################### dbflags dbdflags
 
@@ -95,8 +95,9 @@ TEMPLATE1=$(patsubst %0,%,$(patsubst %1,%,$(patsubst %2,%,$(patsubst %3,%,$(pats
 TEMPLATE2=$(patsubst %0,%,$(patsubst %1,%,$(patsubst %2,%,$(patsubst %3,%,$(patsubst %4,%, \
           $(patsubst %5,%,$(patsubst %6,%,$(patsubst %7,%,$(patsubst %8,%,$(patsubst %9,%, \
           $(TEMPLATE1)))))))))))
-TEMPLATE3=$(addsuffix .template,$(addprefix ../,$(TEMPLATE2)))
-TEMPLATE_FILENAME=$(firstword $(wildcard $($*_TEMPLATE) $(addprefix ../,$($*_TEMPLATE)) ../$*.template $(TEMPLATE3) ../template))
+TEMPLATE3 =$(addsuffix .template,$(addprefix ../,$(TEMPLATE2)))
+TEMPLATE3+=$(addsuffix .tpl-db,  $(addprefix ../,$(TEMPLATE2)))
+TEMPLATE_FILENAME=$(firstword $(wildcard $($*_TEMPLATE) $(addprefix ../,$($*_TEMPLATE)) ../$*.template ../$*.tpl-db $(TEMPLATE3) ../template))
 
 # dbst based database optimization
 ifeq '$(DB_OPT)' 'YES'
@@ -301,7 +302,7 @@ $(COMMON_DIR)/%$(SUBST_SUFFIX):
 endif
 
 $(INSTALL_DB)/%$(SUBST_SUFFIX): %$(SUBST_SUFFIX)
-	$(ECHO) "Installing substitution file $@"
+	$(ECHO) "Installing db substitutions file $@"
 	@$(INSTALL) -d -m $(INSTALL_PERMISSIONS) $< $(@D)
 
 $(INSTALL_DB)/%$(SUBST_SUFFIX): ../%$(SUBST_SUFFIX)
@@ -319,7 +320,7 @@ $(COMMON_DIR)/%.template: $(COMMON_DIR)/%.edf
 	@$(RM) $@.VAR
 
 $(INSTALL_DB)/%.template: %.template
-	$(ECHO) "Installing template file $@"
+	$(ECHO) "Installing db template file $@"
 	@$(INSTALL) -d -m $(INSTALL_PERMISSIONS) $< $(@D)
 
 $(INSTALL_DB)/%.template: ../%.template
@@ -418,7 +419,7 @@ $(INSTALL_DBD)/%: ../%
 
 define  DBD_INSTALLS_template
 $$(INSTALL_DBD)/$$(notdir $(1)) : $(1)
-	$(ECHO) "Installing $$@"
+	$(ECHO) "Installing DBD_INSTALLS $$@"
 	@$$(INSTALL) -d -m $$(INSTALL_PERMISSIONS) $$^ $$(INSTALL_DBD)
 endef
 $(foreach file, $(DBD_INSTALLS), $(eval $(call DBD_INSTALLS_template, $(file))))
@@ -456,16 +457,27 @@ $(COMMON_DIR)/%.db$(RAW): $(COMMON_DIR)/%.edf
 	@$(REPLACEVAR) < $*.VAR > $@
 	@$(RM) $*.VAR
 
+# Note:
+# MSI expansion command was
+#	$(MSI3_15) $(DBFLAGS) -S$< $(TEMPLATE_FILENAME) > msi.tmp
+# This is wrong for msi when both foo.template and foo.substitutions
+# are used as in many of the PCDS IOc's.
+# Specifying foo.template in the command line as above
+# overrides the templates specified in the substitutions file.
+# 
+# PCDS changes it to
+#   $(MSI3_15) $(DBFLAGS) -o $(notdir $@) -S$<
+# to allow both foo.template and foo.subsitutions to coexist.
 $(COMMON_DIR)/%.db$(RAW): %$(SUBST_SUFFIX)
-	$(ECHO) "Inflating database from $< $(TEMPLATE_FILENAME)"
+	$(ECHO) "Inflating database from $<"
 	@$(RM) $(notdir $@)
-	$(MSI3_15) $(DBFLAGS) -o $(notdir $@) -S$< $(TEMPLATE_FILENAME)
+	$(MSI3_15) $(DBFLAGS) -o $(notdir $@) -S$<
 	@$(MV) $(notdir $@) $@
 
 $(COMMON_DIR)/%.db$(RAW): ../%$(SUBST_SUFFIX)
-	$(ECHO) "Inflating database from $< $(TEMPLATE_FILENAME)"
+	$(ECHO) "Inflating database from $<"
 	@$(RM) $(notdir $@)
-	$(MSI3_15) $(DBFLAGS) -o $(notdir $@) -S$< $(TEMPLATE_FILENAME)
+	$(MSI3_15) $(DBFLAGS) -o $(notdir $@) -S$<
 	@$(MV) $(notdir $@) $@
 
 $(COMMON_DIR)/%.db$(RAW): %.template
@@ -509,7 +521,7 @@ $(COMMON_DIR)/%.db: $(COMMON_DIR)/%.db$(RAW)
 else
 
 $(INSTALL_DB)/%: %
-	$(ECHO) "Installing $@"
+	$(ECHO) "Installing db file $@"
 	@$(INSTALL) -d -m $(INSTALL_PERMISSIONS) $< $(@D)
 
 $(INSTALL_DB)/%: ../%
@@ -523,7 +535,7 @@ $(INSTALL_DB)/%.db: $(COMMON_DIR)/%.db
 
 define  DB_INSTALLS_template
 $$(INSTALL_DB)/$$(notdir $(1)) : $(1)
-	$(ECHO) "Installing $$@"
+	$(ECHO) "Installing DB_INSTALLS $$@"
 	@$$(INSTALL) -d -m $$(INSTALL_PERMISSIONS) $$^ $$(INSTALL_DB)
 endef
 $(foreach file, $(DB_INSTALLS), $(eval $(call DB_INSTALLS_template, $(file))))
diff --git a/configure/RULES.archive b/configure/RULES.archive
new file mode 100644
index 0000000..a1648cd
--- /dev/null
+++ b/configure/RULES.archive
@@ -0,0 +1,114 @@
+####################################################
+# RULES for building and installing archive files
+
+# Display how this makefile was called
+$(info RULES.archive: '$(MAKECMDGOALS)')
+
+########################################################
+# NOTE: The rules for generating archive files from
+# %.substitutions files shouldn't be needed any more.
+# If you think you need them, please see Bruce Hill, bhill,
+# so we can discuss.
+
+####################################################
+# Where to find and install files for archive
+
+vpath %.archive       $(USR_VPATH) $(GENERIC_SRC_DIRS) $(dir $(ARCHIVE))
+vpath %.sub-arch	  $(USR_VPATH) $(GENERIC_SRC_DIRS) $(dir $(ARCHIVE)) $(COMMON_DIR)
+vpath %.template      $(USR_VPATH) $(GENERIC_SRC_DIRS) $(dir $(ARCHIVE)) $(COMMON_DIR)
+vpath %.tpl-arch      $(USR_VPATH) $(GENERIC_SRC_DIRS) $(dir $(ARCHIVE)) $(COMMON_DIR)
+
+INSTALL_ARCHIVE = $(INSTALL_LOCATION)/archive
+
+include $(CONFIG)/CONFIG_APP_INCLUDE
+
+####################################################
+# archive Flags (-I path)
+define  ARCHIVE_DIRS_template
+  RELEASE_ARCHIVE_DIRS += $$(wildcard $$(strip $$($(1)))/archive)
+endef
+$(foreach top, $(RELEASE_TOPS), $(eval $(call ARCHIVE_DIRS_template,$(top)) ))
+ARCHIVE_SEARCH_DIRS = . .. $(COMMON_DIR) $(SRC_DIRS) $(INSTALL_ARCHIVE) $(TOP)/archive $(RELEASE_ARCHIVE_DIRS)
+ARCHIVE_INCLUDES = $(addprefix -I, $(ARCHIVE_SEARCH_DIRS))
+ARCHIVEFLAGS  = $($*_ARCHIVEFLAGS) $(USR_ARCHIVEFLAGS) $(ARCHIVE_INCLUDES)
+
+####################################################
+# Generate COMMON_ARCHIVES list
+COMMON_ARCHIVES  += $(filter $(COMMON_DIR)/%, $(foreach file, $(ARCHIVE), \
+	$(firstword $(SOURCE_ARCHIVE) $(COMMON_DIR)/$(file) ) ) )
+SOURCE_ARCHIVE = $(wildcard $(file) $(SOURCE_ARCHIVE_bbb) )
+SOURCE_ARCHIVE_bbb = $(foreach dir, $(GENERIC_SRC_DIRS), $(SOURCE_ARCHIVE_aaa)  )
+SOURCE_ARCHIVE_aaa = $(addsuffix /$(file), $(dir) )
+INSTALL_ARCHIVES += $(addprefix $(INSTALL_ARCHIVE)/, $(notdir $(ARCHIVE)))
+
+####################################################
+# Generate ARCHIVE_DEPENDS_FILES list
+ARCHIVEDEPENDS_FILES += $(addsuffix $(DEP), $(patsubst $(COMMON_DIR)/%,%,$(COMMON_ARCHIVES)))
+
+####################################################
+# Build targets
+
+build:		$(INSTALL_ARCHIVES)
+
+install:		$(INSTALL_ARCHIVES)
+
+rebuild:        clean install
+
+buildInstall:	build
+
+realclean: clean
+
+clean: archive_clean
+
+archive_clean:
+	@$(RM) $(COMMONS)
+	@$(RM) $(TARGETS)
+	@echo "Cleaning"
+
+####################################################
+# Build and install Rules
+
+$(COMMON_DIR)/%.archive: %.sub-arch
+	@$(RM) $(notdir $@)$(DEP)
+	$(MKMF) -m$(notdir $@)$(DEP) $(ARCHIVE_INCLUDES) $@ $< 
+	$(ECHO) "Inflating archive file from $<"
+	@$(RM) $@ msi.tmp
+	$(MSI) $(ARCHIVEFLAGS) -S$< > msi.tmp
+	$(MV) msi.tmp $@
+
+INSTALL = $(PERL) $(TOOLS)/installEpics.pl
+
+$(INSTALL_ARCHIVE)/%: $(COMMON_DIR)/%
+	@echo "Installing common archive file $@"
+	@$(INSTALL) -d -m 644 $< $(@D)
+
+$(INSTALL_ARCHIVE)/%.archive:	%.archive  
+	@echo "Installing archive file $@"
+	@$(INSTALL) -d -m 644 $< $(@D)
+
+#.PRECIOUS: $(COMMON_DIR)/%.archive
+
+#$(INSTALL_ARCHIVE)/%.substitutions: %.substitutions
+#	@echo "Installing archive substitutions file $@"
+#	@$(INSTALL) -d -m 644 $< $(@D)
+
+$(INSTALL_ARCHIVE)/%.sub-arch: %.sub-arch
+	$(ECHO) "Installing archive substitutions file $@"
+	@$(INSTALL) -d -m 644 $< $(@D)
+
+# This rule is obsolete
+# Please rename any archive template files <basename>.tpl-arch
+#$(INSTALL_ARCHIVE)/%.template: %.template
+#	@echo "Installing archive template file $@"
+#	@$(INSTALL) -d -m 644 $< $(@D)
+
+$(INSTALL_ARCHIVE)/%.tpl-arch: %.tpl-arch
+	@echo "Installing archive tpl-arch file $@"
+	@$(INSTALL) -d -m 644 $< $(@D)
+
+#####################################################
+# Include archive dependency files
+ifneq (,$(strip $(ARCHIVEDEPENDS_FILES)))
+-include $(ARCHIVEDEPENDS_FILES)
+endif
+
diff --git a/configure/RULES.autosave b/configure/RULES.autosave
new file mode 100644
index 0000000..f5c277c
--- /dev/null
+++ b/configure/RULES.autosave
@@ -0,0 +1,122 @@
+####################################################
+# RULES for building and installing autosave files
+
+# Display how this makefile was called
+$(info RULES.autosave: '$(MAKECMDGOALS)')
+
+########################################################
+# NOTE: The rules for generating autosave files from
+# %.substitutions files shouldn't be needed any more.
+# If you think you need them, please see Bruce Hill, bhill,
+# so we can discuss.
+
+####################################################
+# Where to find and install files for autosave
+
+vpath %.req           $(USR_VPATH) $(GENERIC_SRC_DIRS) $(dir $(REQ))
+vpath %.sub-req       $(USR_VPATH) $(GENERIC_SRC_DIRS) $(dir $(REQ)) $(COMMON_DIR)
+#vpath %.substitutions $(USR_VPATH) $(GENERIC_SRC_DIRS) $(dir $(REQ)) $(COMMON_DIR)
+vpath %.template      $(USR_VPATH) $(GENERIC_SRC_DIRS) $(dir $(REQ)) $(COMMON_DIR)
+vpath %.tpl-req       $(USR_VPATH) $(GENERIC_SRC_DIRS) $(dir $(REQ)) $(COMMON_DIR)
+
+INSTALL_AUTOSAVE = $(INSTALL_LOCATION)/autosave
+
+include $(CONFIG)/CONFIG_APP_INCLUDE
+
+####################################################
+# Autosave Flags (-I path)
+define  AUTOSAVE_DIRS_template
+  RELEASE_AUTOSAVE_DIRS += $$(wildcard $$(strip $$($(1)))/autosave)
+endef
+$(foreach top, $(RELEASE_TOPS), $(eval $(call AUTOSAVE_DIRS_template,$(top)) ))
+AUTOSAVE_SEARCH_DIRS = . .. $(COMMON_DIR) $(SRC_DIRS) $(INSTALL_AUTOSAVE) $(TOP)/autosave $(RELEASE_AUTOSAVE_DIRS)
+AUTOSAVE_INCLUDES  = $(addprefix -I, $(AUTOSAVE_SEARCH_DIRS))
+AUTOSAVEFLAGS  = $($*_AUTOSAVEFLAGS) $(USR_AUTOSAVEFLAGS) $(AUTOSAVE_INCLUDES)
+
+####################################################
+# Generate COMMON_REQS list
+COMMON_REQS  += $(filter $(COMMON_DIR)/%, $(foreach file, $(REQ), \
+	$(firstword $(SOURCE_REQ) $(COMMON_DIR)/$(file) ) ) )
+SOURCE_REQ = $(wildcard $(file) $(SOURCE_REQ_bbb) )
+SOURCE_REQ_bbb = $(foreach dir, $(GENERIC_SRC_DIRS), $(SOURCE_REQ_aaa)  )
+SOURCE_REQ_aaa = $(addsuffix /$(file), $(dir) )
+INSTALL_REQS += $(addprefix $(INSTALL_AUTOSAVE)/, $(notdir $(REQ)))
+
+####################################################
+# Generate REQ_DEPENDS_FILES list
+REQDEPENDS_FILES += $(addsuffix $(DEP), $(patsubst $(COMMON_DIR)/%,%,$(COMMON_REQS)))
+
+####################################################
+# Build targets
+
+build:		$(INSTALL_REQS)
+
+install:	$(INSTALL_REQS)
+
+rebuild:        clean install
+
+buildInstall:	build
+
+realclean: clean
+
+clean: autosave_clean
+
+autosave_clean:
+	@$(RM) $(COMMONS)
+	@$(RM) $(TARGETS)
+	@echo "Cleaning"
+
+####################################################
+# Build and install Rules
+
+$(COMMON_DIR)/%.req: %.sub-req
+	@$(RM) $(notdir $@)$(DEP)
+	$(MKMF) -m$(notdir $@)$(DEP) $(AUTOSAVE_INCLUDES) $@ $< 
+	$(ECHO) "Inflating autosave request from $<"
+	@$(RM) $@ msi.tmp
+	$(MSI) $(AUTOSAVEFLAGS) -S$< > msi.tmp
+	$(MV) msi.tmp $@
+
+
+INSTALL = $(PERL) $(TOOLS)/installEpics.pl
+
+$(INSTALL_AUTOSAVE)/%: $(COMMON_DIR)/%
+	@echo "Installing autosave file $@"
+	@$(INSTALL) -d -m 644 $< $(@D)
+
+$(INSTALL_AUTOSAVE)/%.req:	%.req  
+	@echo "Installing autosave file $@"
+	@$(INSTALL) -d -m 644 $< $(@D)
+
+$(INSTALL_AUTOSAVE)/%.sub-req:	%.sub-req  
+	@echo "Installing autosave file $@"
+	@$(INSTALL) -d -m 644 $< $(@D)
+
+#.PRECIOUS: $(COMMON_DIR)/%.req
+
+#$(INSTALL_AUTOSAVE)/%.substitutions: %.substitutions
+#	@echo "Installing autosave substitutions file $@"
+#	@$(INSTALL) -d -m 644 $< $(@D)
+
+$(INSTALL_AUTOSAVE)/%.sub-req: %.sub-req
+	@echo "Installing autosave substitutions file $@"
+	@$(INSTALL) -d -m 644 $< $(@D)
+
+#.PRECIOUS: $(COMMON_DIR)/%.substitutions
+
+$(INSTALL_AUTOSAVE)/%.template: %.template
+	@echo "Installing autosave template file $@"
+	@$(INSTALL) -d -m 644 $< $(@D)
+
+$(INSTALL_AUTOSAVE)/%.tpl-req: %.tpl-req
+	@echo "Installing autosave template file $@"
+	@$(INSTALL) -d -m 644 $< $(@D)
+
+#.PRECIOUS: $(COMMON_DIR)/%.template
+
+#####################################################
+# Include autosave dependency files
+ifneq (,$(strip $(REQDEPENDS_FILES)))
+-include $(REQDEPENDS_FILES)
+endif
+
diff --git a/configure/RULES.ioc b/configure/RULES.ioc
index da314a4..23c396e 100644
--- a/configure/RULES.ioc
+++ b/configure/RULES.ioc
@@ -10,29 +10,32 @@
 
 include $(CONFIG)/RULES_DIRS
 
-build$(DIVIDER)$(ARCH) build: buildInstall
-install$(DIVIDER)$(ARCH) install: buildInstall
-$(ARCH): buildInstall
-
-ifeq ($(filter $(ARCH),$(BUILD_ARCHS)),$(ARCH))
-    buildInstall$(DIVIDER)$(ARCH) buildInstall: $(TARGETS)
-
-    clean$(DIVIDER)$(ARCH) clean:
-	$(RM) cdCommands envPaths dllPath.bat relPaths.sh
-else
-    buildInstall$(DIVIDER)$(ARCH) buildInstall:
-    clean$(DIVIDER)$(ARCH) clean:
-endif
-
-cdCommands dllPath.bat relPaths.sh: \
-    $(wildcard $(TOP)/configure/RELEASE*) \
-    $(wildcard $(TOP)/configure/CONFIG_SITE*) | $(INSTALL_BIN)
-	$(CONVERTRELEASE) -a $(ARCH) -t $(IOCS_APPL_TOP) $@
-
-envPaths: $(wildcard $(TOP)/configure/RELEASE*) \
-    $(wildcard $(TOP)/configure/CONFIG_SITE*) | $(INSTALL_BIN)
-	$(CONVERTRELEASE) -t $(IOCS_APPL_TOP) $@
-
-realclean:
-	$(RM) cdCommands envPaths dllPath.bat relPaths.sh
+## PCDS moves the buildInstall, envPaths and other targets from
+## here, RULES.ioc, to RULES.ioc-targets to allow the ioc-targets to
+## be configured w/ or w/o RULES_DIRS
+include $(CONFIG)/RULES.ioc-targets
+
+## PCDS rules for building archive and autosave files in ioc directories.
+## These rules are needed to install autosave and archive files
+## from IOC directories whose Makefile's end like this:
+## include $(CONFIG)/RULES.ioc
+## -include $(CONFIG)/RULES.archive
+## -include $(CONFIG)/RULES.autosave
+## 
+## However, the following style of Makefile works better as it creates
+## O.Common and other O.* directories as needed for proper dependency checking
+## include $(CONFIG)/RULES
+## include $(CONFIG)/RULES.ioc-targets
+## 
+$(INSTALL_ARCHIVE)/%.archive: %.sub-arch
+	@echo "Inflating ioc archive file from $<"
+	@$(RM) $(notdir $@)
+	$(MSI3_15) $(ARCHIVEFLAGS) -o $(notdir $@) -S$<
+	@$(MV) $(notdir $@) $@
+
+$(INSTALL_AUTOSAVE)/%.req: %.sub-req
+	@echo "Inflating ioc autosave file from $<"
+	@$(RM) $(notdir $@)
+	$(MSI3_15) $(AUTOSAVEFLAGS) -o $(notdir $@) -S$<
+	@$(MV) $(notdir $@) $@
 
diff --git a/configure/RULES.ioc-targets b/configure/RULES.ioc-targets
new file mode 100644
index 0000000..4f55a26
--- /dev/null
+++ b/configure/RULES.ioc-targets
@@ -0,0 +1,62 @@
+#*************************************************************************
+# Copyright (c) 2013 UChicago Argonne LLC, as Operator of Argonne
+#     National Laboratory.
+# Copyright (c) 2002 The Regents of the University of California, as
+#     Operator of Los Alamos National Laboratory.
+# EPICS BASE is distributed subject to a Software License Agreement found
+# in file LICENSE that is included with this distribution.
+#*************************************************************************
+#RULES.ioc-targets
+# This file contains targets needed in IOC instance directories
+
+build$(DIVIDER)$(ARCH)   build:   buildInstall
+install$(DIVIDER)$(ARCH) install: buildInstall
+$(ARCH): buildInstall
+
+ifeq ($(filter $(ARCH),$(BUILD_ARCHS)),$(ARCH))
+    buildInstall$(DIVIDER)$(ARCH) buildInstall: $(TARGETS)
+	clean$(DIVIDER)$(ARCH) clean: ioc-targets_clean
+else
+    buildInstall$(DIVIDER)$(ARCH) buildInstall:
+    clean$(DIVIDER)$(ARCH) clean:
+endif
+
+# Notes re IOCS_APPL_TOP vs IOC_APPL_TOP
+# IOCS_APPL_TOP is the traditional macro for EPICS that
+# is set to the absolute pathname of INSTALL_LOCATION.
+# The ioc can use this to locate it's executables, db files, etc
+#
+# IOC_APPL_TOP was introduced by PCDS for templated ioc's
+# IOC_APPL_TOP gets set in the build files for templated
+# ioc's to the TOP for it's parent IOC build.
+# The build system and the ioc application use this to locate
+# the executables, db files, etc
+#
+# While nearly the same, convertRelease needs to use the
+# -t option for IOCS_APPL_TOP and the
+# -T option for IOC_APPL_TOP
+# to find the RELEASE* files
+cdCommands dllPath.bat relPaths.sh: \
+    $(wildcard $(TOP)/configure/RELEASE*) \
+    $(wildcard $(TOP)/configure/CONFIG*) $(INSTALL_BIN)\
+    $(wildcard $(TOP)/RELEASE_SITE) \
+    $(wildcard $(TOP)/RELEASE.local)
+ifeq ($(IOC_APPL_TOP),)
+ifeq ($(IOCS_APPL_TOP),)
+	$(CONVERTRELEASE) -a $(ARCH) $@
+else
+	$(CONVERTRELEASE) -a $(ARCH) -t $(IOCS_APPL_TOP) $@
+endif
+else
+	$(CONVERTRELEASE) -a $(ARCH) -T $(IOC_APPL_TOP) $@
+endif
+
+envPaths: $(wildcard $(TOP)/configure/RELEASE*) \
+    $(wildcard $(TOP)/configure/CONFIG_SITE*) | $(INSTALL_BIN)
+	$(CONVERTRELEASE) -t $(IOCS_APPL_TOP) $@
+
+realclean: ioc-targets_clean
+
+ioc-targets_clean:
+	$(RM) cdCommands envPaths dllPath.bat relPaths.sh
+
diff --git a/configure/RULES_BUILD b/configure/RULES_BUILD
index 2be4b33..3d127e6 100644
--- a/configure/RULES_BUILD
+++ b/configure/RULES_BUILD
@@ -83,6 +83,10 @@ endif
 -include $(CONFIG)/RULES_FILE_TYPE
 
 -include $(CONFIG)/RULES.Db
+ 
+-include $(CONFIG)/RULES.autosave
+
+-include $(CONFIG)/RULES.archive
 
 #---------------------------------------------------------------
 # Include defines and rules for prod, library and test* targets
diff --git a/configure/RULES_TOP b/configure/RULES_TOP
index 2aa2e1f..6596e1f 100644
--- a/configure/RULES_TOP
+++ b/configure/RULES_TOP
@@ -19,8 +19,17 @@ realuninstall: uninstallDirs
 	$(RMDIR) $(INSTALL_LOCATION_BIN)
 	$(RMDIR) $(INSTALL_LOCATION_LIB)
 
-UNINSTALL_DIRS += $(INSTALL_DBD) $(INSTALL_INCLUDE) $(INSTALL_DOC) \
-    $(INSTALL_HTML) $(INSTALL_TEMPLATES) $(INSTALL_DB) $(DIRECTORY_TARGETS)
+UNINSTALL_DIRS += $(INSTALL_ARCHIVE)
+UNINSTALL_DIRS += $(INSTALL_AUTOSAVE)
+UNINSTALL_DIRS += $(INSTALL_CFG)
+UNINSTALL_DIRS += $(INSTALL_DB)
+UNINSTALL_DIRS += $(INSTALL_DBD)
+UNINSTALL_DIRS += $(INSTALL_DOC)
+UNINSTALL_DIRS += $(INSTALL_HTML)
+UNINSTALL_DIRS += $(INSTALL_INCLUDE)
+UNINSTALL_DIRS += $(INSTALL_JAVA)
+UNINSTALL_DIRS += $(INSTALL_TEMPLATES)
+UNINSTALL_DIRS += $(DIRECTORY_TARGETS)
 uninstallDirs:
 	$(RMDIR) $(UNINSTALL_DIRS)
 
